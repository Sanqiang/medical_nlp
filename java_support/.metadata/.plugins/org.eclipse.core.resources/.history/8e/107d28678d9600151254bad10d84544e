package edu.pitt.medical_nlp.text;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;

public class FeatureSelect {
	public HashMap<String, ArrayList<Integer>> code_map = new HashMap<>();
	public ArrayList<HashSet<String>> texts = new ArrayList<>();
	
	
	void init(String path_data, String path_code) {
		try {
			BufferedReader reader = new BufferedReader(new FileReader(new File(path_data)));
			String line = null;
			while (null != (line = reader.readLine())) {
				HashSet<String> features = new HashSet<>(Arrays.asList(line.split(" ")));
				texts.add(features);
			}
			reader.close();

			reader = new BufferedReader(new FileReader(new File(path_code)));
			line = null;
			int idx_line = 1;
			while (null != (line = reader.readLine())) {
				String[] codes = line.split(" ");
				for (String code : codes) {
					if (code_map.containsKey(code)) {
						code_map.put(code, new ArrayList<>());
					}
					code_map.get(code).add(idx_line);
				}
				++idx_line;
				
			}
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	void select(){
		for (String code : code_map.keySet()) {
			HashMap<String, SelectWrap> obj = new HashMap<>();
			
			ArrayList<Integer> idx_contains = code_map.get(code);
			for (Integer idx_contain : idx_contains) {
				
			}
		}
	}
}

class SelectWrap{
	ArrayList<Integer> idx_contain = new ArrayList<>(), idx_exclude = new ArrayList<>();
}
