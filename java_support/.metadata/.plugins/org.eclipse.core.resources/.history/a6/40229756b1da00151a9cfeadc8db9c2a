package medical_classify;

import edu.pitt.medical_nlp.text.Process;
import net.didion.jwnl.data.IndexWord;
import net.didion.jwnl.data.POS;
import net.didion.jwnl.dictionary.Dictionary;
import net.didion.jwnl.dictionary.MorphologicalProcessor;

public class WordNetUtility {
	public static String getStem(String raw_word) {
		raw_word = raw_word.toLowerCase();
		String nword = "";
		String[] words = raw_word.split("[\\s]");
		for (String word : words) {
			String nsword = getSingleStem(word);
			if (nsword.contains(" ")) {
				if (nsword.replace(" ", "-").equals(word)) {
					nsword = word;
				}else{
					System.err.println(nsword);
					System.err.println(word);
				}
			}
			if (Process.exclude_words_list.contains(word)) {
				nsword = word;
			}
			nword += nsword + " ";
		}
		if (nword.endsWith(" ")) {
			nword = nword.substring(0, nword.length() - 1);
		}
		return nword;
	}

	public static String getSingleStem(String word) {

		try {
			String nword = null;
			MorphologicalProcessor mop = Dictionary.getInstance().getMorphologicalProcessor();
			IndexWord w = mop.lookupBaseForm(POS.NOUN, word);
			if (w != null) {
				nword = w.getLemma();
				return nword;
			}
			w = mop.lookupBaseForm(POS.VERB, word);
			if (w != null) {
				nword = w.getLemma();
				return nword;
			}
			w = mop.lookupBaseForm(POS.ADJECTIVE, word);
			if (w != null) {
				nword = w.getLemma();
				return nword;
			}
			w = mop.lookupBaseForm(POS.ADVERB, word);
			if (w != null) {
				nword = w.getLemma();
				return nword;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return word;
	}

}
